// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/28/2022 19:08:52"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          digital_clock
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module digital_clock_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Add_1H_Switch;
reg Add_1M_Switch;
reg CLK;
reg D0;
reg D1;
reg D2;
reg D3;
reg D4;
reg D5;
reg Mode;
reg S;
reg Zero;
// wires                                               
wire H0;
wire H1;
wire H2;
wire H3;
wire H4;
wire [6:0] My_H0;
wire [6:0] My_H1;
wire [6:0] My_M0;
wire [6:0] My_M1;
wire [6:0] My_S0;
wire [6:0] My_S1;
wire [6:0] Your_H0;
wire [6:0] Your_H1;
wire [6:0] Your_M0;
wire [6:0] Your_M1;
wire [6:0] Your_S0;
wire [6:0] Your_S1;

// assign statements (if any)                          
digital_clock i1 (
// port map - connection between master ports and signals/registers   
	.Add_1H_Switch(Add_1H_Switch),
	.Add_1M_Switch(Add_1M_Switch),
	.CLK(CLK),
	.D0(D0),
	.D1(D1),
	.D2(D2),
	.D3(D3),
	.D4(D4),
	.D5(D5),
	.H0(H0),
	.H1(H1),
	.H2(H2),
	.H3(H3),
	.H4(H4),
	.Mode(Mode),
	.My_H0(My_H0),
	.My_H1(My_H1),
	.My_M0(My_M0),
	.My_M1(My_M1),
	.My_S0(My_S0),
	.My_S1(My_S1),
	.S(S),
	.Your_H0(Your_H0),
	.Your_H1(Your_H1),
	.Your_M0(Your_M0),
	.Your_M1(Your_M1),
	.Your_S0(Your_S0),
	.Your_S1(Your_S1),
	.Zero(Zero)
);
initial 
begin 
#100000000 $finish;
end 

// Zero
initial
begin
	Zero = 1'b0;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #10000 1'b1;
	#10000;
end 

// Mode
initial
begin
	Mode = 1'b1;
	Mode = #160000 1'b0;
	Mode = #5440000 1'b1;
end 

// Add_1M_Switch
initial
begin
	Add_1M_Switch = 1'b0;
	Add_1M_Switch = #480000 1'b1;
	Add_1M_Switch = #160000 1'b0;
	Add_1M_Switch = #640000 1'b1;
	Add_1M_Switch = #160000 1'b0;
	Add_1M_Switch = #480000 1'b1;
	Add_1M_Switch = #320000 1'b0;
end 

// Add_1H_Switch
initial
begin
	Add_1H_Switch = 1'b0;
	Add_1H_Switch = #320000 1'b1;
	Add_1H_Switch = #160000 1'b0;
	Add_1H_Switch = #320000 1'b1;
	Add_1H_Switch = #160000 1'b0;
	Add_1H_Switch = #480000 1'b1;
	Add_1H_Switch = #160000 1'b0;
	Add_1H_Switch = #640000 1'b1;
	Add_1H_Switch = #160000 1'b0;
	Add_1H_Switch = #640000 1'b1;
	Add_1H_Switch = #160000 1'b0;
end 

// S
initial
begin
	S = 1'b1;
	S = #1280000 1'b0;
	S = #44800000 1'b1;
	S = #1280000 1'b0;
	S = #20480000 1'b1;
	S = #640000 1'b0;
	S = #3200000 1'b1;
	S = #640000 1'b0;
	S = #14720000 1'b1;
	S = #640000 1'b0;
end 

// D5
initial
begin
	D5 = 1'b0;
	D5 = #67840000 1'b1;
	D5 = #1920000 1'b0;
	D5 = #1920000 1'b1;
	D5 = #3840000 1'b0;
	D5 = #11520000 1'b1;
	D5 = #3840000 1'b0;
end 

// D4
initial
begin
	D4 = 1'b0;
	D4 = #46080000 1'b1;
	D4 = #3200000 1'b0;
	D4 = #18560000 1'b1;
	D4 = #1920000 1'b0;
	D4 = #1920000 1'b1;
	D4 = #3840000 1'b0;
end 

// D3
initial
begin
	D3 = 1'b1;
	D3 = #49280000 1'b0;
	D3 = #18560000 1'b1;
	D3 = #1920000 1'b0;
	D3 = #17280000 1'b1;
	D3 = #3840000 1'b0;
end 

// D2
initial
begin
	D2 = 1'b1;
	D2 = #46080000 1'b0;
	D2 = #21760000 1'b1;
	D2 = #1920000 1'b0;
	D2 = #1920000 1'b1;
	D2 = #3840000 1'b0;
end 

// D1
initial
begin
	D1 = 1'b0;
end 

// D0
initial
begin
	D0 = 1'b0;
	D0 = #67840000 1'b1;
	D0 = #1920000 1'b0;
end 
endmodule

